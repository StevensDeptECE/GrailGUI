{
    "U8":{"name":"u8","comment":"unsigned int 0..255"},
    "U16":{"name":"u16", "comment":"unsigned int 0..65535"},
    "U24":{"name":"u24", "comment":"unsigned int 0..16*1024*1024"},
    "U32":{"name":"u32", "comment":"unsigned int 0..(2^32)-1"},
    "U64":{"name":"u64", "comment":"unsigned int 0..(2^64)-1"},
    "U128":{"name":"u128", "comment":"unsigned int 0..(2^128)-1"},
    "U256":{"name":"u256", "comment":"unsigned int 0..(2^256)-1"},
    "I8":{"name":"i8", "comment":"signed int -128..127"},
    "I16":{"name":"i16", "comment":"signed int -32768..32767"},
    "I24":{"name":"i24", "comment":"signed int -8388608..8388607"},
    "I32":{"name":"i32", "comment":"signed int -(2^31)..(2^31)-1"},
    "I64":{"name":"i64","comment":"signed int -(2^63)..(2^63)-1"},
    "I128":{"name":"i128","comment":"signed int -(2^127)..(2^127)-1"},
    "I256":{"name":"i256","comment":"signed int -(2^255)..(2^255)-1"},
    "F32":{"name":"f32", "comment":"single-precision floating point 1.175e-38..3.403e+38"},
    "F64":{"name":"f64", "comment":"double-precision floating point 2.225e-308..1.798e+308"},
	"BOOL":{"name":"bool", "comment":"true/false, normally 1 byte but arrays should use 1 bit"},
	"DATE":{"name":"date", "comment":"32 bit date relative to J2000 (integer)"},
    "JULDATE":{"name":"juldate", "comment":"scientific date relative to J2000 (double)"},
    "TIMESTAMP":{"name":"timestamp", "comment":"typical unix timestamp"},
	"STRING8":{"name":"string8", "comment":"string of 1 byte length, each char is 1 byte"},
    "STRING16":{"name":"string16", "comment":"string of 2 byte length, each char is 1 byte"},
    "STRING32":{"name":"string32", "comment":"string of 4 byte length, each char is 1 byte"},
    "STRING64":{"name":"string64","comment":"string of 8 byte length, each char is 1 byte"},
	"UTF8_8":{"name":"utf8_8", "comment":"international string of 1 byte length, each char is 1 or 2 bytes"},
    "UTF8_16":{"name":"utf8_16", "comment":"international string of 2 byte length, each char is 1 or 2 bytes"},
    "UTF8_32":{"name":"utf8_32", "comment":"international string of 4 byte length, each char is 1 or 2 bytes"},
    "UTF8_64":{"name":"utf8_64", "comment":"international string of 8 byte length, each char is 1 or 2 bytes"},
	"UTF16_8":{"name":"utf16_8", "comment":"international string of 1 byte length, each char is 2 bytes"},
    "UTF16_16":{"name":"utf16_16", "comment":"international string of 2 byte length, each char is 2 bytes"},
    "UTF16_32":{"name":"utf16_32", "comment":"international string of 4 byte length, each char is 2 bytes"},
    "UTF16_64":{"name":"utf16_64", "comment":"international string of 8 byte length, each char is 2 bytes"},
    "REGEX":{"name":"regex", "comment":"string representing a regular expression"},
	"LIST8":{"name":"list8", "comment":"list with 1 byte length"},
    "LIST16":{"name":"list16", "comment":"list with 2 byte length"},
    "LIST32":{"name":"list32", "comment":"list with 4 byte length"},
    "LIST64":{"name":"list64", "comment":"list with 8 byte length"},
    "STRUCT8":{"name":"struct8" , "comment":"struct with 1 byte length of records"},
    "STRUCT16":{"name":"struct16", "comment":"struct with 2 byte length of records"},
    "STRUCT32":{"name":"struct32", "comment":"struct with 4 byte length of records"},
	"DYNAMICLIST8":{"name":"dynamiclist8", "comment":"list from dynamic sources (e.x. server). Provides a length at transmission time (at most 1 byte length)"},
    "DYNAMICLIST16":{"name":"dynamiclist16", "comment":"list from dynamic sources (e.x. server). Provices a length at transmissoin time (at most 2 byte length)"},
	"FUNC8":{"name":"func8", "comment":"function with up to 1 byte length of instructions"},
    "FUNC16":{"name":"func16", "comment":"function with up to 2 byte length of instructions"},
	"FUNCPARAM8":{"name":"funcparam8", "comment":"function with up to 1 byte length of parameters and 1 byte length of instructions"},
    "FUNCPARAM16":{"name":"funcparam16","comment":"function with up to 2 byte length of parameters and 2 byte length of instructions"},
	"LOOP1":{"name":"loop1", "comment":"repeat up to 1 byte length times"},
    "LOOP2":{"name":"loop2", "comment":"repeat up to 2 byte length times"},
    "LOOP4":{"name":"loop4", "comment":"repeat up to 4 byte length times"},
    "BITVEC8":{"name":"bitvec8", "comment":"bit vector of 1 byte length"},
    "BITVEC16":{"name":"bitvec16", "comment":"bit vector of 2 byte length"},
    "BITVEC32":{"name":"bitvec32", "comment":"bit vector of 4 byte length"},
    "BITVEC64":{"name":"bitvec64", "comment":"bit vector of 8 byte length"},
    "BV32":{"name":"bitvec32_int", "comment":"32 bits stored in a 4 byte integer"},
    "BV64":{"name":"bitvec64_int", "comment":"64 bits stored in a 8 byte integer"},
	"BITFIELDS":{"name":"bitfields", "comment":"4 byte size, 1 byte bit size (for storing small numbers packed bitfields)"},
	"ARITHMETIC":{"name":"arithmetic", "comment":"arithmetic encoding of numbers specify range and size (4 bytes each)"},
	"JPEG":{"name":"jpeg", "comment":"Allows embedding of jpegs into stream"},
    "JPEGLIST":{"name":"jpeglist", "comment":"4 byte number of jpegs, then a single header, then multiple files of the same size"},
    "BLOB16":{"name":"blob16", "comment":"block of binary data of 2 byte length"},
    "BLOB32":{"name":"blob32", "comment":"block of binary data of 4 byte length"},
    "BLOB64":{"name":"blob64", "comment":"block of binary data of 8 byte length"},
	"BIGINT":{"name":"bigint", "comment":"container for big integers"},
    "OK":{"name":"ok", "comment":"Success value for result types"},
    "ERR":{"name":"error", "comment":"Wrapper for error propogation"},
    "SOME":{"name":"some", "comment":"Wrapper for optional or result values"},
    "NONE":{"name":"none", "comment":"Empty container (null without the pointers)"},
    "OPTIONAL":{"name":"optional<T>", "comment":"Contains either Some(T) or None"},
    "RESULT":{"name":"result<T,E>", "comment":"Contains either Ok(T) or Err(E)"},
    "TYPEDEF":{"name":"typedef", "comment":"allows aliasing of XDL types"},
    "UNIMPL":{"name":"unimplemented", "comment":"allows error handling for unimplemented types or functionality"},
    "ENUM_SIZE":{"name":"enum_size does not really exist", "comment":"sentinel for running over the enum length"}
}
